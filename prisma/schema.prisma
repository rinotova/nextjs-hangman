generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model Account {
    id                 String  @id @default(cuid()) @map("_id")
    userId             String
    type               String
    provider           String
    providerAccountId  String
    refresh_token      String?
    access_token       String?
    expires_at         Int?
    token_type         String?
    scope              String?
    id_token           String?
    session_state      String?
    oauth_token_secret String?
    oauth_token        String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid()) @map("_id")
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid()) @map("_id")
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    userName      String?   @unique
    Account       Account[]
    Session       Session[]
    room          Room?
}

model Room {
    id                   String    @id @default(cuid()) @map("_id")
    player1_ID           String    @unique
    player2_ID           String?
    wordToGuess          String?
    isGuessed            Boolean?
    user                 User      @relation(fields: [player1_ID], references: [id])
    lastLetter           String?
    attempts             Int?
    lastAttemptTimestamp DateTime?
    isPlayer_1_Online    Boolean?
    isPlayer_2_Online    Boolean?

    @@unique([id, player1_ID])
}
